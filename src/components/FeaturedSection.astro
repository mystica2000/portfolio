---
import { getCollection } from "astro:content";

const posts = await getCollection("posts");
const bytes = await getCollection("bytes");

interface Latest {
  title: string;
  date: Date | string;
  link: string;
}

const latestPosts: Latest[] = posts
  .filter((aPost: any) => !aPost.data.draft)
  .map((aPost: any) => ({
    title: aPost.data.title,
    link: `/${aPost.collection}/${aPost.id}`,
    date:
      aPost.data.lastModified == null
        ? aPost.data.pubDate
        : aPost.data.lastModified,
  }));
const latestBytes: Latest[] = bytes.map((aByte: any) => ({
  title: aByte.data.title,
  link: `/${aByte.collection}/${aByte.id}`,
  date: aByte.data.pubDate,
}));

let latest: Latest[] = [...latestPosts, ...latestBytes];
latest.sort((a, b) => {
  if (b.date instanceof Date && a.date instanceof Date) {
    return (
      Date.parse(b.date.toDateString()) - Date.parse(a.date.toDateString())
    );
  } else {
    return 1;
  }
});

latest = latest.slice(0, 3).map((aLatest) => {
  return {
    ...aLatest,
    date:
      aLatest.date instanceof Date
        ? aLatest.date.toLocaleDateString("en-IN")
        : "",
  };
});
---

<section class="section">
  <hr />
  <h3>Latest Content</h3>
  <ul>
    {
      latest.length > 0 &&
        latest.map((aLatest) => (
          <li>
            <a href={aLatest.link} class="navlink">
              {aLatest.date} - {aLatest.title}
            </a>
          </li>
        ))
    }
  </ul>
</section>

<style>
  .section {
    margin-top: 5em;
  }

  ul {
    list-style-type: square;
  }

  .navlink:hover::after {
    content: "â†—";
  }
</style>
