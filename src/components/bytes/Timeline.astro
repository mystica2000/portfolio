---
import Share from "@components/logo/Share.astro";
import { formatDate } from 'src/utils/formatDate';

const bytes = await Astro.glob('@content/bytes/*.mdx');

bytes.sort((a,b) => Date.parse(b.frontmatter.pubDate) - Date.parse(a.frontmatter.pubDate) )

const formatTitle = (str:string) => {
  return str.toLowerCase().replaceAll(" ","-");
}
---

<div>
  <dl>
    {
      bytes.map((aByte, index) => (
        <Fragment>
        <dt class="flex" id={index.toString()}>
          <h2 id={`${formatTitle(aByte.frontmatter.title)}`} class="scroll-header">
          <a class="title" href={`#${formatTitle(aByte.frontmatter.title)}`}>
            {aByte.frontmatter.title}
          </a>
          </h2>

          <button class="share-btn"><Share /></button>
        </dt>
        <dd class="content">
          <div class="date">last updated: {formatDate(new Date(aByte.frontmatter.pubDate))}</div>
          <aByte.Content />
        </dd>
      </Fragment>
      ))
    }
  </dl>
</div>

<script>

  const btns = document.getElementsByClassName("share-btn");
  console.log(btns);
  for (let btn of btns) {
    btn.addEventListener("click", (event: Event) => {
      const target = event.target as HTMLElement;
      const titleElement = target.closest("dt")?.querySelector(".title") as HTMLAnchorElement;
      if (titleElement) {
        const url = window.location.href.split('#')[0] + '#' + titleElement.getAttribute('href')?.substring(1);

        navigator.clipboard.writeText(url).then(() => {
          const shareBtn = btn.innerHTML;
          btn.innerHTML = "<span style='color:var(--astro-bg-color);'>copied</span>"

          // Revert back to the original content after 3 seconds
          setTimeout(() => {
            btn.innerHTML = shareBtn;
          }, 2000);
        }).catch(err => {
          console.error('Failed to copy: ', err);
        });
      }
    })
  }

</script>

<style>

  dt {
    position: relative;
  }

  dl {
    margin: 0.5em;
  }

  .title {
    display: grid;
    grid-template-columns: 1fr 0.1fr;
    margin-right: 1.2em;
    margin-left: 1.2em;
    text-underline-offset: 3px;
    text-transform: capitalize;
  }

  .title::before {
    width: 10px;
    height: 10px;
    position: absolute;
    content: "";
    top: 10px;
    left: 0px;
    background: rgb(131,58,180);
    background: linear-gradient(90deg, rgba(131,58,180,1) 0%, rgba(253,29,29,1) 50%, rgba(252,176,69,1) 100%);
  }

  .content {
    border-radius: 10px;
    padding: 1em;
    margin: 1em;
    max-height: fit-content;
    background: #ffffff59;
    border: 2px solid rgb(229 229 229 / 72%);
    box-shadow: rgba(100, 100, 111, 0.2) 0px 7px 29px 0px;

    transition-property: opacity, visibility;
    transition-duration: 0.2s;
    opacity: 1;
    transition: max-height 0.2s ease-out, opacity 0.2s ease-out;
  }

  :global(.dark) .content {
    border: 2px solid rgb(59 54 54);
    background: #161515b8;
    box-shadow: rgb(255 255 255 / 20%) 0px 7px 29px 0px;
  }

  .title { color: black;}
  :global(.dark) .title { color: #B39DDB; };

  .hide {
    display: none;
    opacity: 0;
  }

  h2 {
    font-size: clamp(1em, 40%, 1.5em);
    font-weight: 600;
    margin-inline: 0;
    margin-block: 0;
    width: fit-content;
  }

  button {
    background: #d9d9d9;
    border-radius: 10px;
    border: 2px solid transparent;
    box-shadow: rgba(0, 0, 0, 0.16) 0px 10px 36px 0px, rgba(0, 0, 0, 0.06) 0px 0px 0px 1px;
    cursor: pointer;
    width: 6em;
  }

  :global(.dark) button {
    background: #292626;
  }

  :global(.dark) .title {
    color: white;
  }

  .flex {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
  }

  .date {
    text-align: end;
    font-weight: 600;
    text-decoration: overline;
    font-variant: all-petite-caps;
    font-style: italic;
  }


</style>