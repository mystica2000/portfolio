---
import Share from "@components/logo/Share.astro";

const bytes = await Astro.glob('@content/bytes/*.mdx');
---

<div>
  <dl>
    {
      bytes.map((aByte, index) => (
        <Fragment>
        <dt id={index.toString()}>
          <a class="title" href={`#${aByte.frontmatter.title}`}>
            <h2> {aByte.frontmatter.title} </h2>
            <button><Share /></button>
          </a>
        </dt>
        <dd class="content">
          <aByte.Content />
        </dd>
      </Fragment>
      ))
    }
  </dl>
</div>

<style>

  dt {
    position: relative;
  }

  .title {
    display: grid;
    grid-template-columns: 1fr 0.1fr;
    margin-right: 1.2em;
    margin-left: 1.2em;
    text-decoration: none;
    color: black;
    cursor: default;
  }

  .title::before {
    width: 10px;
    height: 10px;
    position: absolute;
    content: "";
    top: 10px;
    left: 0px;
    background: rgb(131,58,180);
    background: linear-gradient(90deg, rgba(131,58,180,1) 0%, rgba(253,29,29,1) 50%, rgba(252,176,69,1) 100%);
  }

  .content {
    border-radius: 10px;
    padding: 1em;
    margin: 1em;
    max-height: fit-content;
    background: #ffffff59;
    border: 2px solid rgb(229 229 229 / 72%);
    box-shadow: rgba(100, 100, 111, 0.2) 0px 7px 29px 0px;

    transition-property: opacity, visibility;
    transition-duration: 0.2s;
    opacity: 1;
    transition: max-height 0.2s ease-out, opacity 0.2s ease-out;
  }

  :global(.dark) .content {
    border: 2px solid rgb(59 54 54);
    background: #161515b8;
    box-shadow: rgb(255 255 255 / 20%) 0px 7px 29px 0px;
  }

  .hide {
    display: none;
    opacity: 0;
  }

  h2 {
    font-size: clamp(1em, 40%, 1.5em);
    font-weight: 600;
    margin-inline: 0;
    margin-block: 0;
  }

  button {
    background: #d9d9d9;
    border-radius: 10px;
    border: 2px solid transparent;
    box-shadow: rgba(0, 0, 0, 0.16) 0px 10px 36px 0px, rgba(0, 0, 0, 0.06) 0px 0px 0px 1px;
    cursor: pointer;
  }

  :global(.dark) button {
    background: #292626;
  }

  :global(.dark) .title {
    color: white;
  }


</style>

<script is:inline>
   const btns = document.getElementById("id#1");
   btns.addEventListener("click", () => {
    const content = btns.nextElementSibling;
    if (content.style.maxHeight) {
      content.style.maxHeight = null;
      content.style.opacity = '0';
      setTimeout(() => { content.style.display = 'none'; }, 200);
    } else {
      content.style.display = 'block';
      setTimeout(() => {
        content.style.maxHeight = content.scrollHeight + 'px';
        content.style.opacity = '1';
      }, 10);
    }

   })
</script>