---
const bytes = await Astro.glob('@content/bytes/*.mdx');

---

<div>
  <dl>
    {
      bytes.map((aByte, index) => (
        <Fragment>
        <dt id={index.toString()}>{aByte.frontmatter.title}</dt>
        <dd class="content">
          <aByte.Content />
        </dd>
      </Fragment>
      ))
    }
  </dl>
</div>

<style>
  dt::before {
    content: 'ðŸ”— ';
  }

  dt:hover::before {
    content: 'âž– ';
  }

  dt {
    cursor: pointer;
  }

  .content {
    border-radius: 10px;
    padding: 1em;
    margin: 1em;
    max-height: fit-content;
    background: #ffffff59;
    border: 2px solid rgb(229 229 229 / 72%);
    box-shadow: rgba(100, 100, 111, 0.2) 0px 7px 29px 0px;

    transition-property: opacity, visibility;
    transition-duration: 0.2s;
    opacity: 1;
    transition: max-height 0.2s ease-out, opacity 0.2s ease-out;
  }

  :global(.dark) .content {
    border: 2px solid rgb(59 54 54);
    background: #161515b8;
    box-shadow: rgb(255 255 255 / 20%) 0px 7px 29px 0px;
  }

  .hide {
    display: none;
    opacity: 0;
  }


</style>

<script is:inline>
   const btns = document.getElementById("id#1");
   btns.addEventListener("click", () => {
    const content = btns.nextElementSibling;
    if (content.style.maxHeight) {
      content.style.maxHeight = null;
      content.style.opacity = '0';
      setTimeout(() => { content.style.display = 'none'; }, 200);
    } else {
      content.style.display = 'block';
      setTimeout(() => {
        content.style.maxHeight = content.scrollHeight + 'px';
        content.style.opacity = '1';
      }, 10);
    }

   })
</script>