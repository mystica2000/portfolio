---
import Share from "@components/logo/Share.astro";
import { formatDate } from "src/utils/formatDate";
import AnchorLink from "@components/blog/Anchor.astro";

const components = { a: AnchorLink };
const bytes: ByteList[] = Object.values(
  import.meta.glob("../../content/bytes/*.mdx", {
    eager: true,
  })
);

interface ByteList {
  frontmatter: {
    title: string;
    minutesRead: string;
    pubDate: string;
  };
  Content: any;
}

bytes.sort(
  (a, b) =>
    Date.parse(b.frontmatter.pubDate) - Date.parse(a.frontmatter.pubDate)
);

const formatTitle = (str: string) => {
  return str.toLowerCase().replaceAll(" ", "-");
};
---

<div>
  <dl>
    {
      bytes.map((aByte, index) => (
        <Fragment>
          <dt class="flex" id={"dt_" + index.toString()}>
            <h2
              id={`${formatTitle(aByte.frontmatter.title)}`}
              class="scroll-header"
            >
              <span
                id={`/bytes/${formatTitle(aByte.frontmatter.title)}/`}
                class="title"
              >
                {aByte.frontmatter.title}
              </span>
            </h2>

            <button class="share-btn">
              <Share />
            </button>
          </dt>
          <dd class="content" id={index.toString()}>
            <div class="date">
              last updated: {formatDate(new Date(aByte.frontmatter.pubDate))}
            </div>
            <aByte.Content components={components} />
          </dd>
        </Fragment>
      ))
    }
  </dl>
</div>

<script>
  function initializeShareButtonEvent() {
    // for btns share

    const btns = document.getElementsByClassName("share-btn");
    for (let btn of btns) {
      btn.addEventListener("click", (event: any) => {
        event.stopPropagation();
        const target = event.target;
        const titleElement = target.closest("dt")?.querySelector(".title");
        if (titleElement) {
          const location = window.location.href.indexOf("/bytes");
          const sectionURL =
            window.location.href.slice(0, location) +
            "/bytes/" +
            titleElement.getAttribute("id")?.substring(1).split("/")[1] +
            "/";

          const url = new URL(sectionURL);
          const h2element = document.getElementById(
            titleElement.getAttribute("id")?.substring(1).split("/")[1]
          );

          if (h2element) {
            if (window.innerWidth < 440) {
              h2element.style.scrollMarginTop = "150px";
            } else {
              h2element.style.scrollMarginTop = "110px";
            }
            h2element.scrollIntoView({
              behavior: "smooth",
              block: "start",
              inline: "nearest",
            });
          }

          navigator.clipboard
            .writeText(url.toString())
            .then(() => {
              const shareBtn = btn.innerHTML;
              btn.innerHTML =
                "<span style='color:var(--astro-bg-color);'>copied</span>";
              history.pushState(null, "", url);

              // Revert back to the original content after 3 seconds
              setTimeout(() => {
                btn.innerHTML = shareBtn;
              }, 2000);
            })
            .catch((err) => {
              console.error("Failed to copy: ", err);
            });
        }
      });
    }
  }

  function initializeh2Events() {
    const h2Array = document.getElementsByClassName("scroll-header");
    for (const h2 of h2Array) {
      h2.addEventListener("click", (event: any) => {
        const element = document.getElementById(event.target.id);

        if (element) {
          if (window.innerWidth < 440) {
            element.style.scrollMarginTop = "150px";
          } else {
            element.style.scrollMarginTop = "110px";
          }

          element.scrollIntoView({
            behavior: "smooth",
            block: "start",
          });

          const location = window.location.href.indexOf("/bytes");
          const sectionURL =
            window.location.href.slice(0, location) + event.target.id;
          history.pushState(null, "", sectionURL);
        }
      });
    }
  }

  function navigateByRoute() {
    const location = window.location.href.indexOf("bytes/");
    const url = window.location.href.slice(location + 6).replace("/", "");

    const element = document.getElementById(url);

    if (element) {
      if (window.innerWidth < 440) {
        element.style.scrollMarginTop = "150px";
      } else {
        element.style.scrollMarginTop = "110px";
      }

      element.scrollIntoView({
        behavior: "instant",
        block: "start",
      });
    }
  }

  initializeShareButtonEvent();
  initializeh2Events();
  navigateByRoute();

  // document.addEventListener("DOMContentLoaded", () => {
  //   initializeShareButtonEvent();
  //   initializeh2Events();
  //   navigateByRoute();
  // });
  document.addEventListener("astro:after-swap", () => {
    initializeShareButtonEvent();
    initializeh2Events();
    navigateByRoute();
  });
</script>

<style>
  dt {
    position: relative;
  }

  dl {
    margin: 0.5em;
  }

  .scroll-header {
    display: grid;
    grid-template-columns: 1fr 0.1fr;
    margin-right: 1.2em;
    margin-left: 1.2em;

    text-decoration: underline;
    text-underline-offset: 4px;
    text-transform: capitalize;
    width: 100%;
  }

  .scroll-header::before {
    width: 10px;
    height: 10px;
    position: absolute;
    content: "";
    top: 10px;
    left: 0px;
    background: rgb(131, 58, 180);
    background: linear-gradient(
      90deg,
      rgba(131, 58, 180, 1) 0%,
      rgba(253, 29, 29, 1) 50%,
      rgba(252, 176, 69, 1) 100%
    );
  }

  .content {
    border-radius: 10px;
    padding: 1em;
    margin: 1em;
    margin-right: 0em;
    max-height: fit-content;
    background: #ffffff59;
    border: 2px solid rgb(229 229 229 / 72%);
    box-shadow: rgba(100, 100, 111, 0.2) 0px 7px 29px 0px;

    transition-property: opacity, visibility;
    transition-duration: 0.2s;
    opacity: 1;
    transition:
      max-height 0.2s ease-out,
      opacity 0.2s ease-out;
  }

  :global(.dark) .content {
    border: 2px solid rgb(59 54 54);
    background: #161515b8;
    box-shadow: rgb(255 255 255 / 20%) 0px 7px 29px 0px;
  }

  .title {
    color: black;
    width: fit-content;
    cursor: pointer;
  }
  :global(.dark) .title {
    color: #b39ddb;
  }

  .hide {
    display: none;
    opacity: 0;
  }

  h2 {
    font-size: clamp(1em, 40%, 1.5em);
    font-weight: 600;
    margin-inline: 0;
    margin-block: 0;
    width: fit-content;
  }

  button {
    background: #d9d9d9;
    border-radius: 10px;
    border: 2px solid transparent;
    box-shadow:
      rgba(0, 0, 0, 0.16) 0px 10px 36px 0px,
      rgba(0, 0, 0, 0.06) 0px 0px 0px 1px;
    cursor: pointer;
    width: 6em;
  }

  :global(.dark) button {
    background: #292626;
  }

  :global(.dark) .title {
    color: white;
  }

  .flex {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
  }

  .date {
    text-align: end;
    font-weight: 600;
    text-decoration: overline;
    font-variant: all-petite-caps;
    font-style: italic;
  }
</style>
