---
import Moon from "./logo/Moon.astro";
import Sun from "./logo/Sun.astro";

const pathname = new URL(Astro.request.url).pathname;
const currentPath = pathname.slice(1);
---

<header>
  <nav class="nav__box">
    <h1 class="home">
      <a
        href="/"
        class="navlink no-decor"
        class:list={["navlink", "no-decor", { active: currentPath == "" }]}
        >Mystica</a
      >
    </h1>
    <ul>
      <li>
        <a
          class:list={[
            "navlink",
            {
              active: currentPath == "posts/" || /^posts\/.*/.test(currentPath),
            },
          ]}
          href="/posts">posts</a
        >
      </li>
      <li>
        <a
          class:list={[
            "navlink",
            {
              active: currentPath == "bytes/" || /^bytes\/.*/.test(currentPath),
            },
          ]}
          href="/bytes">bytes</a
        >
      </li>
      <li>
        <a
          class:list={["navlink", { active: currentPath == "projects/" }]}
          href="/projects">projects</a
        >
      </li>
      <li>
        <a
          class:list={["navlink", { active: currentPath == "about/" }]}
          href="/about">about</a
        >
      </li>
      <li>
        <button id="lightMode" class="btn"><Sun /></button>
        <button id="darkMode" class="btn"><Moon /></button>
      </li>
    </ul>
  </nav>
</header>

<style>
  header {
    display: flex;
    flex-direction: row;
    width: 100%;
    justify-content: space-around;
    position: sticky;

    padding-top: 20px;
    padding-bottom: 20px;

    top: 0;
    z-index: 999;
  }

  .nav__box {
    max-width: var(--content-width);
    display: flex;
    flex-direction: row;
    align-items: center;
    width: 100%;
    justify-content: space-between;
    padding-left: 0.5em;
    padding-right: 0.5em;
    border-radius: 20px;
    -webkit-backdrop-filter: blur(
      4px
    ); /* Add this line first, it fixes blur for Safari*/
    backdrop-filter: blur(4px);
    margin-left: 10px;
    margin-right: 10px;
    position: relative;
  }

  .nav__box::after {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    border-radius: 10px;
    padding: 2px; /* This creates the border width */
    background: radial-gradient(circle at top left, #f00, #3020ff);
    -webkit-mask:
      linear-gradient(#fff 0 0) content-box,
      linear-gradient(#fff 0 0);
    -webkit-mask-composite: xor;
    mask-composite: exclude;
    pointer-events: none;
  }

  .no-decor {
    text-decoration: none;
  }

  @media screen and (max-width: 440px) {
    .nav__box {
      flex-direction: column;
      align-items: flex-start;
      padding-bottom: 1em;
    }

    ul {
      margin: 0;
      padding-left: 0.5em;
    }
  }

  ul {
    list-style: "/";
    display: flex;
    gap: 0.7em;

    align-items: center;
  }

  li:last-child {
    list-style: "";
  }

  #lightMode,
  #darkMode {
    display: none;
  }

  .home {
    text-transform: uppercase;
    text-align: rotateY(45deg);
    text-decoration: none;
    -webkit-text-stroke: 0.2px #000000;
    letter-spacing: 2px;
  }

  #toggleMode {
    scale: 1.4;
    border: 1px solid white;
    background-color: transparent;
  }

  .btn {
    background: #8686891c;
    border-radius: 50%;
    border: 2px solid #86868929;
    display: flex;
    flex-direction: column;
    align-items: center;
    padding: 0.6em;
  }
</style>

<script is:inline>
  const init = () => {
    const theme = (() => {
      if (typeof localStorage != "undefined" && localStorage.getItem("theme")) {
        return localStorage.getItem("theme");
      }

      if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
        return "dark";
      }

      return "light";
    })();

    if (theme == "light") {
      document.getElementById("lightMode").style.display = "none";
      document.getElementById("darkMode").style.display = "flex";
      document.documentElement.classList.remove("dark");
    } else {
      document.getElementById("lightMode").style.display = "flex";
      document.getElementById("darkMode").style.display = "none";
      document.documentElement.classList.add("dark");
    }

    window.localStorage.setItem("theme", theme);

    const handleToggleClick = () => {
      const element = document.documentElement;
      element.classList.toggle("dark");

      const isDark = element.classList.contains("dark");
      localStorage.setItem("theme", isDark ? "dark" : "light");

      const modeName = isDark ? "dark" : "light";

      if (modeName == "light") {
        document.getElementById("darkMode").style.display = "flex";
        document.getElementById("lightMode").style.display = "none";
      } else {
        document.getElementById("darkMode").style.display = "none";
        document.getElementById("lightMode").style.display = "flex";
      }
    };

    document
      .getElementById("darkMode")
      .addEventListener("click", handleToggleClick);

    document
      .getElementById("lightMode")
      .addEventListener("click", handleToggleClick);
  };

  document.addEventListener("DOMContentLoaded", () => init());
  document.addEventListener("astro:after-swap", () => init());
</script>
